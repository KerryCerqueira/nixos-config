# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
	imports =
		[ (modulesPath + "/installer/scan/not-detected.nix")
		];

	boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" ];
	boot.initrd.kernelModules = [ ];
	boot.kernelModules = [ "kvm-intel" ];
	boot.extraModulePackages = [ ];

	fileSystems = {
		"/" = {
			device = "/dev/disk/by-uuid/5fc03019-c6c8-4d7e-9056-32f9c318c1b6";
			fsType = "ext4";
		};
		"/boot" = {
			device = "/dev/disk/by-uuid/AC23-4599";
			fsType = "vfat";
			options = [ "fmask=0022" "dmask=0022" ];
		};
		"/home" = {
			device = "/dev/disk/by-uuid/c67ed632-d694-454d-b39e-95322d23d0a5";
			fsType = "ext4";
		};
		"/nix" = {
			device = "/dev/disk/by-uuid/449f9f98-da15-4965-8311-c0ce7a803211";
			fsType = "ext4";
		};
	};
	swapDevices = [
		{ device = "/dev/disk/by-uuid/048cb61f-0fa8-4960-8607-97aa670662cf"; }
	];

# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
# (the default) this is the recommended approach. When using systemd-networkd it's
# still possible to use this option, but it's recommended to use it in conjunction
# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
# networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
# networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
